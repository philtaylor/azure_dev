{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vnetNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String",
            "metadata": {
                "description": "Identify whether to use a new or existing vnet"
            }
        },

        "virtualNetworkName": {
            "defaultValue": "hub-vnet",
            "type": "String",
            "metadata": {
                "description": "Virtual Network Name"
            }
        },
        "virtualNetworkAddressPrefix": {
            "defaultValue": "10.0.0.0/16",
            "type": "String",
            "metadata": {
                "description": "CIDR for Virtual Network"
            }
        },
        "BootstrapStorageAccount": {
            "defaultValue": "vmseries",
            "type": "String",
            "metadata": {
                "description": "Storage account hosting the bootstrap files"
            }
        },
        "StorageAccountAccessKey": {
            "defaultValue": "lGCcuTF8rVeolLpNpmlW+m0NE9ust4SqMmfynALSi6I1dHjuDyeVgwSenERpGLyQOlXgMgfmhGjAxu4Co/mmSg==",
            "type": "String",
            "metadata": {
                "description": "Authentication key to access the storage account"
            }
        },
        "StorageAccountFileShare": {
            "defaultValue": "bootstrap2",
            "type": "String",
            "metadata": {
                "description": "The file share in the storage account where the bootstrap files are located"
            }
        },
        "SharedFWFileShareDirectory": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "The subdirectory hosting the bootstrap files. Only required if hosting multiple bootstrap directories on the same share"
            }
        },

        "mgmtSubnetName": {
            "defaultValue": "Mgmt",
            "type": "String",
            "metadata": {
                "description": "Subnet for Management Network"
            }
        },
        "mgmtSubnetPrefix": {
            "defaultValue": "10.0.0.0/24",
            "type": "String",
            "metadata": {
                "description": "CIDR for Management Network"
            }
        },
        "untrustSubnetName": {
            "defaultValue": "Untrust",
            "type": "String",
            "metadata": {
                "description": "Subnet for Egress firewall Untrust Network"
            }
        },
        "untrustSubnetPrefix": {
            "defaultValue": "10.0.1.0/24",
            "type": "String",
            "metadata": {
                "description": "CIDR for Egress firewall Untrust Network"
            }
        },
        "trustSubnetName": {
            "defaultValue": "Trust",
            "type": "String",
            "metadata": {
                "description": "Subnet for Egress firewall Trust Network"
            }
        },
        "trustSubnetPrefix": {
            "defaultValue": "10.0.2.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet for Egress firewall Trust Network"
            }
        },
        "egressLBFrontEndAddress": {
            "defaultValue": "10.0.2.100",
            "type": "String",
            "metadata": {
                "description": "IP Address for the egress load balancer"
            }
        },
        "imageSku": {
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
                "bundle1",
                "bundle2"
            ],
            "type": "String",
            "metadata": {
                "description": "byol = Bring Your Own License; bundle1 = Bundle 1 PAYG (Hourly); bundle2 = Bundle 2 PAYG (Hourly)"
            }
        },
        "firewallVmSize": {
            "defaultValue": "Standard_DS3_v2",
            "allowedValues": [
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2"
            ],
            "type": "String",
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        },
        "disktype": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Premium_LRS"
            ],
            "type": "String"
        },
        "imageVersion": {
            "defaultValue": "latest",
            "allowedValues": [
                "latest",
                "8.1.0",
                "8.0.0",
                "7.1.1"
            ],
            "type": "String",
            "metadata": {
                "description": "PAN OS Version"
            }
        },
        "username": {
            "defaultValue": "pandemo",
            "type": "String",
            "metadata": {
                "description": "Username of the administrator account of VM instances"
            }
        },
        "password": {
            "defaultValue": "Dem0pa$$w0rd",
            "type": "SecureString",
            "metadata": {
                "description": "Password for the administrator account of all VM instances. Must be specified if Authentication Type is 'password'."
            }
        },
        "networkSecurityGroupName": {
            "defaultValue": "nsg",
            "type": "String",
            "metadata": {
                "description": "Network Security Group Name"
            }
        },
        "networkSecurityGroupInboundIP": {
            "defaultValue": "0.0.0.0/0",
            "type": "String",
            "metadata": {
                "description": "Your source public IP address. Added to the inbound NSG on eth0 (MGMT), to restrict access to the deployment."
            }
        },
        "enable-palo-alto-bootstrap": {
            "defaultValue": "true",
            "type": "Bool",
            "metadata": {
                "description": "Specifies if bootstrap storage account will be used"
            }
        },
        "virtualMachine-count": {
            "defaultValue": 2,
            "type": "Int",
            "metadata": {
                "description": "Number of NVA VMs to be created."
            }
        },
        "virtualNetworkExistingRGName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of resource group of EXISTING VNET"
            }
        }
    },
    "variables": {
        "vnetID": "[resourceId(parameters('virtualNetworkExistingRGName'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "shared-custom-data-field": "[concat('storage-account=', parameters('BootstrapStorageAccount'), ',access-key=', parameters('StorageAccountAccessKey'), ',file-share=', parameters('StorageAccountFileShare'),',share-directory=', parameters('SharedFWFileShareDirectory'))]",
        "resource-prefix": "panfw",
        "shared-virtualMachine-name-prefix": "[concat('shared-',variables('resource-prefix'), '-vm')]",
        "uniqueId": "[uniqueString(resourceGroup().id)]",
        "location": "[resourceGroup().location]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2016-06-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'Allow-All')]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', 'Management')]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('mgmtSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('mgmtSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'Management')]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('untrustSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('untrustSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'Allow-All')]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('trustSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('trustSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'Allow-All')]"
                            }
                        }
                    }
                ]
            },
            "condition": "[equals(parameters('vnetNewOrExisting'),'new')]"
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-08-01",
            "name": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-pip')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-pip')]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            },
            "copy": {
                "name": "nicPipLoop",
                "count": "[parameters('virtualMachine-count')]"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2017-08-01",
            "name": "LB-Egress",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', 'AS-FW')]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LB-Egress-FrontEnd",
                        "properties": {
                            "privateIPAddress": "[parameters('egressLBFrontEndAddress')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/',parameters('trustSubnetName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "AS-FW"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "Allow-All-Out",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'LB-Egress'), '/frontendIPConfigurations/LB-Egress-FrontEnd')]"
                            },
                            "frontendPort": 0,
                            "backendPort": 0,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "All",
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'LB-Egress'), '/backendAddressPools/AS-FW')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'LB-Egress'), '/probes/TCP-22')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "TCP-22",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundNatRules": [],
                "inboundNatPools": []
            },
            "resources": []
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "name": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-mgmt')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups','Allow-All')]",
                "LB-Egress"
            ],
            "tags": {
                "displayName": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-mgmt')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-mgmt-pip'))]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/',parameters('mgmtSubnetName'))]"
                            }
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups','Allow-All')]"
                }
            },
            "copy": {
                "name": "nic1Loop",
                "count": "[parameters('virtualMachine-count')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "name": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-untrust')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', 'LB-Ingress')]",
                "nicPipLoop"
            ],
            "tags": {
                "displayName": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-untrust')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-pip'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/',parameters('untrustSubnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'LB-Ingress'), '/backendAddressPools/Ingress-AS-FW')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "nic1Loop",
                "count": "[parameters('virtualMachine-count')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2017-09-01",
            "name": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-trust')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/loadBalancers', 'LB-Egress')]"
            ],
            "tags": {
                "displayName": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-trust')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": true,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/',parameters('trustSubnetName'))]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'LB-Egress'), '/backendAddressPools/AS-FW')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "copy": {
                "name": "nic1Loop",
                "count": "[parameters('virtualMachine-count')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-06-01",
            "name": "Allow-All",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-All-In",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow-All-Out",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2017-06-01",
            "name": "Management",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-All-In",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow-All-Out",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ],
                "defaultSecurityRules": [
                    {
                        "name": "AllowVnetInBound",
                        "properties": {
                            "description": "Allow inbound traffic from all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowAzureLoadBalancerInBound",
                        "properties": {
                            "description": "Allow inbound traffic from azure load balancer",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "AzureLoadBalancer",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny all inbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowVnetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to all VMs in VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "VirtualNetwork",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "priority": 65000,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowInternetOutBound",
                        "properties": {
                            "description": "Allow outbound traffic from all VMs to Internet",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "Internet",
                            "access": "Allow",
                            "priority": 65001,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllOutBound",
                        "properties": {
                            "description": "Deny all outbound traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 65500,
                            "direction": "Outbound",
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "name": "AS-FW",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "tags": {},
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 2,
                "platformFaultDomainCount": 2
            },
            "resources": []
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2017-03-30",
            "name": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1))]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', 'AS-FW')]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-mgmt'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-untrust'))]",
                "[concat('Microsoft.Network/networkInterfaces/', concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-trust'))]"
            ],
            "tags": {
                "displayName": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1))]"
            },
            "plan": {
                "name": "[parameters('imageSku')]",
                "product": "vmseries1",
                "publisher": "paloaltonetworks"
            },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', 'AS-FW')]"
                },
                "osProfile": {
                    "computerName": "VM-FW1",
                    "adminUsername": "[parameters('Username')]",
                    "adminPassword": "[parameters('Password')]",
                    "customData": "[if(equals(parameters('enable-palo-alto-bootstrap'), bool('false')), json('null'), base64(variables('shared-custom-data-field')))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('firewallVmSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "paloaltonetworks",
                        "offer": "vmseries1",
                        "sku": "[parameters('imageSku')]",
                        "version": "[parameters('imageVersion')]"
                    },
                    "osDisk": {
                        "managedDisk": {
                            "storageAccountType": "[parameters('disktype')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-mgmt'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-untrust'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-trust'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                }
            },
            "copy": {
                "name": "vmLoop",
                "count": "[parameters('virtualMachine-count')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-08-01",
            "name": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-mgmt-pip')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "[concat(variables('shared-virtualMachine-name-prefix'), copyindex(1), '-mgmt-pip')]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            },
            "copy": {
                "name": "nicPipLoop",
                "count": "[parameters('virtualMachine-count')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2017-08-01",
            "name": "Ingress-LB-Pub",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[concat('publiclb', variables('uniqueId'))]"
                }
            },
            "resources": []
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "name": "Ingress-AS-FW",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "tags": {},
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformUpdateDomainCount": 2,
                "platformFaultDomainCount": 2
            },
            "resources": []
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2017-08-01",
            "name": "LB-Ingress",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', 'Ingress-AS-FW')]",
                "[resourceId('Microsoft.Network/publicIPAddresses', 'Ingress-LB-Pub')]"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LB-Ingress-FrontEnd",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'Ingress-LB-Pub')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "Ingress-AS-FW"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "Allow-80-in",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','LB-Ingress'), '/frontendIPConfigurations/LB-Ingress-FrontEnd')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 4,
                            "loadDistribution": "SourceIPProtocol",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'LB-Ingress'), '/backendAddressPools/Ingress-AS-FW')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', 'LB-Ingress'), '/probes/TCP-22')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "TCP-22",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 22,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [],
                "outboundNatRules": [],
                "inboundNatPools": []
            },
            "resources": []
        }
    ],
    "outputs": {}
}
